package com.ct.db.db.db.activesessions.generated;

import com.ct.db.db.db.activesessions.Activesessions;
import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation representing an entity (for example, a
 * row) in the Table db.db.db.activesessions.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made
 * to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedActivesessionsImpl extends AbstractBaseEntity<Activesessions> implements Activesessions {
    
    private Integer id;
    private String usersPhoneNumber;
    private String phoneextensionsPhoneNumber;
    private String sextersPhoneNumber;
    
    protected GeneratedActivesessionsImpl() {
        
    }
    
    @Override
    public Integer getId() {
        return id;
    }
    
    @Override
    public String getUsersPhoneNumber() {
        return usersPhoneNumber;
    }
    
    @Override
    public String getPhoneextensionsPhoneNumber() {
        return phoneextensionsPhoneNumber;
    }
    
    @Override
    public String getSextersPhoneNumber() {
        return sextersPhoneNumber;
    }
    
    @Override
    public final Activesessions setId(Integer id) {
        this.id = id;
        return this;
    }
    
    @Override
    public final Activesessions setUsersPhoneNumber(String usersPhoneNumber) {
        this.usersPhoneNumber = usersPhoneNumber;
        return this;
    }
    
    @Override
    public final Activesessions setPhoneextensionsPhoneNumber(String phoneextensionsPhoneNumber) {
        this.phoneextensionsPhoneNumber = phoneextensionsPhoneNumber;
        return this;
    }
    
    @Override
    public final Activesessions setSextersPhoneNumber(String sextersPhoneNumber) {
        this.sextersPhoneNumber = sextersPhoneNumber;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "+Objects.toString(getId()));
        sj.add("usersPhoneNumber = "+Objects.toString(getUsersPhoneNumber()));
        sj.add("phoneextensionsPhoneNumber = "+Objects.toString(getPhoneextensionsPhoneNumber()));
        sj.add("sextersPhoneNumber = "+Objects.toString(getSextersPhoneNumber()));
        return "ActivesessionsImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Activesessions)) { return false; }
        final Activesessions thatActivesessions = (Activesessions)that;
        if (!Objects.equals(this.getId(), thatActivesessions.getId())) {return false; }
        if (!Objects.equals(this.getUsersPhoneNumber(), thatActivesessions.getUsersPhoneNumber())) {return false; }
        if (!Objects.equals(this.getPhoneextensionsPhoneNumber(), thatActivesessions.getPhoneextensionsPhoneNumber())) {return false; }
        if (!Objects.equals(this.getSextersPhoneNumber(), thatActivesessions.getSextersPhoneNumber())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getUsersPhoneNumber());
        hash = 31 * hash + Objects.hashCode(getPhoneextensionsPhoneNumber());
        hash = 31 * hash + Objects.hashCode(getSextersPhoneNumber());
        return hash;
    }
    
    @Override
    public Class<Activesessions> entityClass() {
        return Activesessions.class;
    }
}