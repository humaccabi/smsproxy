package com.ct.db.db.db.activesessions.generated;

import com.ct.db.db.db.activesessions.Activesessions;
import com.ct.db.db.db.phoneextensions.Phoneextensions;
import com.ct.db.db.db.sexters.Sexters;
import com.ct.db.db.db.users.Users;
import com.speedment.Entity;
import com.speedment.config.db.mapper.identity.StringIdentityMapper;
import com.speedment.field.FieldIdentifier;
import com.speedment.field.StringForeignKeyField;
import com.speedment.internal.core.field.StringForeignKeyFieldImpl;
import javax.annotation.Generated;

/**
 * The generated base interface representing an entity (for example, a row)
 * in the Table db.db.db.activesessions.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made
 * to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface GeneratedActivesessions extends Entity<Activesessions> {
    
    /**
     * This Field corresponds to the {@link Activesessions} field that can be
     * obtained using the {@link Activesessions#getSextersPhoneNumber()} method.
     */
    final StringForeignKeyField<Activesessions, String, Sexters> SEXTERS_PHONE_NUMBER = new StringForeignKeyFieldImpl<>(Identifier.SEXTERS_PHONE_NUMBER, Activesessions::getSextersPhoneNumber, Activesessions::setSextersPhoneNumber, Activesessions::findSextersPhoneNumber, new StringIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Activesessions} field that can be
     * obtained using the {@link Activesessions#getUsersPhoneNumber()} method.
     */
    final StringForeignKeyField<Activesessions, String, Users> USERS_PHONE_NUMBER = new StringForeignKeyFieldImpl<>(Identifier.USERS_PHONE_NUMBER, Activesessions::getUsersPhoneNumber, Activesessions::setUsersPhoneNumber, Activesessions::findUsersPhoneNumber, new StringIdentityMapper(), false);
    /**
     * This Field corresponds to the {@link Activesessions} field that can be
     * obtained using the {@link Activesessions#getPhoneExtensionsPhoneNumber()}
     * method.
     */
    final StringForeignKeyField<Activesessions, String, Phoneextensions> PHONE_EXTENSIONS_PHONE_NUMBER = new StringForeignKeyFieldImpl<>(Identifier.PHONE_EXTENSIONS_PHONE_NUMBER, Activesessions::getPhoneExtensionsPhoneNumber, Activesessions::setPhoneExtensionsPhoneNumber, Activesessions::findPhoneExtensionsPhoneNumber, new StringIdentityMapper(), false);
    
    /**
     * Finds and returns the foreign key Entity {@link Phoneextensions}
     * referenced by the field that can be obtained using {@link
     * Activesessions#getPhoneExtensionsPhoneNumber()}.
     * <p>
     * N.B. The current implementation only supports lazy-loading of the
     * referenced Entities. This means that if you traverse N Activesessions
     * entities and call this method for each one, there will be N SQL-queries
     * executed.
     * 
     * @return the foreign key Entity {@link Phoneextensions} referenced by the
     * field that can be obtained using {@link
     * Activesessions#getPhoneExtensionsPhoneNumber()}
     */
    Phoneextensions findPhoneExtensionsPhoneNumber();
    
    /**
     * Finds and returns the foreign key Entity {@link Sexters} referenced by the
     * field that can be obtained using {@link
     * Activesessions#getSextersPhoneNumber()}.
     * <p>
     * N.B. The current implementation only supports lazy-loading of the
     * referenced Entities. This means that if you traverse N Activesessions
     * entities and call this method for each one, there will be N SQL-queries
     * executed.
     * 
     * @return the foreign key Entity {@link Sexters} referenced by the field
     * that can be obtained using {@link Activesessions#getSextersPhoneNumber()}
     */
    Sexters findSextersPhoneNumber();
    
    /**
     * Finds and returns the foreign key Entity {@link Users} referenced by the
     * field that can be obtained using {@link
     * Activesessions#getUsersPhoneNumber()}.
     * <p>
     * N.B. The current implementation only supports lazy-loading of the
     * referenced Entities. This means that if you traverse N Activesessions
     * entities and call this method for each one, there will be N SQL-queries
     * executed.
     * 
     * @return the foreign key Entity {@link Users} referenced by the field that
     * can be obtained using {@link Activesessions#getUsersPhoneNumber()}
     */
    Users findUsersPhoneNumber();
    
    /**
     * Returns the sextersPhoneNumber of this Activesessions. The
     * sextersPhoneNumber field corresponds to the database column
     * db.db.activesessions.sexters_phoneNumber.
     * 
     * @return the sextersPhoneNumber of this Activesessions
     */
    String getSextersPhoneNumber();
    
    /**
     * Returns the usersPhoneNumber of this Activesessions. The usersPhoneNumber
     * field corresponds to the database column
     * db.db.activesessions.users_phoneNumber.
     * 
     * @return the usersPhoneNumber of this Activesessions
     */
    String getUsersPhoneNumber();
    
    /**
     * Returns the phoneExtensionsPhoneNumber of this Activesessions. The
     * phoneExtensionsPhoneNumber field corresponds to the database column
     * db.db.activesessions.phoneExtensions_phoneNumber.
     * 
     * @return the phoneExtensionsPhoneNumber of this Activesessions
     */
    String getPhoneExtensionsPhoneNumber();
    
    /**
     * Sets the sextersPhoneNumber of this Activesessions. The sextersPhoneNumber
     * field corresponds to the database column
     * db.db.activesessions.sexters_phoneNumber.
     * 
     * @param sextersPhoneNumber to set of this Activesessions
     * @return this Activesessions instance
     */
    Activesessions setSextersPhoneNumber(String sextersPhoneNumber);
    
    /**
     * Sets the usersPhoneNumber of this Activesessions. The usersPhoneNumber
     * field corresponds to the database column
     * db.db.activesessions.users_phoneNumber.
     * 
     * @param usersPhoneNumber to set of this Activesessions
     * @return this Activesessions instance
     */
    Activesessions setUsersPhoneNumber(String usersPhoneNumber);
    
    /**
     * Sets the phoneExtensionsPhoneNumber of this Activesessions. The
     * phoneExtensionsPhoneNumber field corresponds to the database column
     * db.db.activesessions.phoneExtensions_phoneNumber.
     * 
     * @param phoneExtensionsPhoneNumber to set of this Activesessions
     * @return this Activesessions instance
     */
    Activesessions setPhoneExtensionsPhoneNumber(String phoneExtensionsPhoneNumber);
    
    enum Identifier implements FieldIdentifier<Activesessions> {
        
        SEXTERS_PHONE_NUMBER ("sexters_phoneNumber"),
        USERS_PHONE_NUMBER ("users_phoneNumber"),
        PHONE_EXTENSIONS_PHONE_NUMBER ("phoneExtensions_phoneNumber");
        
        private final String columnName;
        
        Identifier(String columnName) {
            this.columnName = columnName;
        }
        
        @Override
        public String dbmsName() {
            return "db";
        }
        
        @Override
        public String schemaName() {
            return "db";
        }
        
        @Override
        public String tableName() {
            return "activesessions";
        }
        
        @Override
        public String columnName() {
            return this.columnName;
        }
    }
}