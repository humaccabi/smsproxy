package com.ct.db.db.db.activesessions.generated;

import com.ct.db.db.db.activesessions.Activesessions;
import com.ct.db.db.db.phoneextensions.Phoneextensions;
import com.ct.db.db.db.sexters.Sexters;
import com.ct.db.db.db.users.Users;
import com.speedment.Speedment;
import com.speedment.exception.SpeedmentException;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * The generated base implementation representing an entity (for example, a
 * row) in the Table db.db.db.activesessions.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made
 * to it will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public abstract class GeneratedActivesessionsImpl extends AbstractBaseEntity<Activesessions> implements Activesessions {
    
    private String sextersPhoneNumber;
    private String usersPhoneNumber;
    private String phoneExtensionsPhoneNumber;
    
    protected GeneratedActivesessionsImpl() {
        
    }
    
    @Override
    public Phoneextensions findPhoneExtensionsPhoneNumber() {
        return managerOf_(Phoneextensions.class).findAny(Phoneextensions.PHONE_NUMBER, getPhoneExtensionsPhoneNumber())
            .orElseThrow(() -> new SpeedmentException(
                "Foreign key constraint error. Phoneextensions is set to " + getPhoneExtensionsPhoneNumber()
                ));
            
    }
    
    @Override
    public Sexters findSextersPhoneNumber() {
        return managerOf_(Sexters.class).findAny(Sexters.PHONE_NUMBER, getSextersPhoneNumber())
            .orElseThrow(() -> new SpeedmentException(
                "Foreign key constraint error. Sexters is set to " + getSextersPhoneNumber()
                ));
            
    }
    
    @Override
    public Users findUsersPhoneNumber() {
        return managerOf_(Users.class).findAny(Users.PHONE_NUMBER, getUsersPhoneNumber())
            .orElseThrow(() -> new SpeedmentException(
                "Foreign key constraint error. Users is set to " + getUsersPhoneNumber()
                ));
            
    }
    
    @Override
    public String getSextersPhoneNumber() {
        return sextersPhoneNumber;
    }
    
    @Override
    public String getUsersPhoneNumber() {
        return usersPhoneNumber;
    }
    
    @Override
    public String getPhoneExtensionsPhoneNumber() {
        return phoneExtensionsPhoneNumber;
    }
    
    @Override
    public final Activesessions setSextersPhoneNumber(String sextersPhoneNumber) {
        this.sextersPhoneNumber = sextersPhoneNumber;
        return this;
    }
    
    @Override
    public final Activesessions setUsersPhoneNumber(String usersPhoneNumber) {
        this.usersPhoneNumber = usersPhoneNumber;
        return this;
    }
    
    @Override
    public final Activesessions setPhoneExtensionsPhoneNumber(String phoneExtensionsPhoneNumber) {
        this.phoneExtensionsPhoneNumber = phoneExtensionsPhoneNumber;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("sextersPhoneNumber = "+Objects.toString(getSextersPhoneNumber()));
        sj.add("usersPhoneNumber = "+Objects.toString(getUsersPhoneNumber()));
        sj.add("phoneExtensionsPhoneNumber = "+Objects.toString(getPhoneExtensionsPhoneNumber()));
        return "ActivesessionsImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Activesessions)) { return false; }
        final Activesessions thatActivesessions = (Activesessions)that;
        if (!Objects.equals(this.getSextersPhoneNumber(), thatActivesessions.getSextersPhoneNumber())) {return false; }
        if (!Objects.equals(this.getUsersPhoneNumber(), thatActivesessions.getUsersPhoneNumber())) {return false; }
        if (!Objects.equals(this.getPhoneExtensionsPhoneNumber(), thatActivesessions.getPhoneExtensionsPhoneNumber())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getSextersPhoneNumber());
        hash = 31 * hash + Objects.hashCode(getUsersPhoneNumber());
        hash = 31 * hash + Objects.hashCode(getPhoneExtensionsPhoneNumber());
        return hash;
    }
    
    @Override
    public Class<Activesessions> entityClass() {
        return Activesessions.class;
    }
}